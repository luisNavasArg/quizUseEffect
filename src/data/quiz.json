{
  "data": [
    {
      "question": "¿React.createElement() es nativa de Javascript?",
      "choices": ["Falso", "Verdadero"],
      "answer": "Falso"
    },
    {
      "question": "¿Qué herramienta se encarga de transpilar código XML?",
      "choices": ["Babel", "React DOM", "JSX Editor", "Webpack"],
      "answer": "Babel"
    },
    {
      "question": "¿Qué necesita un componente de clase para usar el método return?",
      "choices": ["El método render()", "Las llaves { }","El constructor"],
      "answer": "El método render()"
    },
    {
      "question": "En las siguientes opciones cuál No es una característica de un componente",
      "choices": ["Finalmente escalable", "Reutilizables", "Fuertemente tipados"],
      "answer": "Fuertemente tipados"
    },
    {
      "question": "En el siguiente código: <Component {...props}/> ¿Cuáles de sus props estarán disponibles para utilizar?",
      "choices": ["Solo props.children", "Todas aquellas pasadas al component", "Ninguna es correcta", "Las dos primeras son correctas"],
      "answer": "Todas aquellas pasadas al component"
    },
    {
      "question": "¿Cuál de las siguientes opciones pertenece a una característica de una props?",
      "choices": ["Reciben valor desde un componente hijo", "Son inmutables", "Pueden cambiar dentro de un component único", "Son mutables con setState()"],
      "answer": "Son inmutables"
    },
    {
      "question": "¿En cuál empresa nació React?",
      "choices": ["Twitter","Microsoft","Facebook", "Google"],
      "answer": "Facebook"
    },
    {
      "question": "const Juguito(props) ¿De qué modo se puese desestructurar esta propiedad? return Jugo de {props.fruta} con {props.extras}",
      "choices": ["const Juguito(...props)", "const Juguito([fruta, extras])", "const Juguito(...fruta, extras)",
         "const Juguito({fruta, extras})"],
      "answer": "const Juguito({fruta, extras})"
    },
    {
      "question": "¿Cuál de los siguientes módulos NO viene por defecto al iniciar un proyecto con CRA?",
      "choices": ["React Router", "babel", "Jest", "React DOM"],
      "answer": "React Router"
    },
    {
      "question": "¿Cuál de los siguientes Hooks es nativo de React?",
      "choices": ["useFetch()", "useInput()", "useToggle()", "UseState"],
      "answer": "UseState"
    }
  ]
}